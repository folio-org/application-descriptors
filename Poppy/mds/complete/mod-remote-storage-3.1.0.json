{
  "id": "mod-remote-storage-3.1.0",
  "name": "Remote storage API module",
  "requires": [
    {
      "id": "inventory",
      "version": "13.0"
    },
    {
      "id": "inventory-move",
      "version": "0.2"
    },
    {
      "id": "holdings-storage",
      "version": "6.0"
    },
    {
      "id": "identifier-types",
      "version": "1.2"
    },
    {
      "id": "contributor-types",
      "version": "2.0"
    },
    {
      "id": "users",
      "version": "16.0"
    },
    {
      "id": "login",
      "version": "7.3"
    },
    {
      "id": "permissions",
      "version": "5.6"
    },
    {
      "id": "locations",
      "version": "3.0"
    },
    {
      "id": "circulation",
      "version": "14.2"
    },
    {
      "id": "item-storage",
      "version": "10.0"
    },
    {
      "id": "service-points",
      "version": "3.3"
    },
    {
      "id": "pubsub-event-types",
      "version": "0.1"
    },
    {
      "id": "pubsub-publishers",
      "version": "0.1"
    },
    {
      "id": "pubsub-subscribers",
      "version": "0.1"
    }
  ],
  "optional": [
    {
      "id": "authtoken",
      "version": "2.0"
    }
  ],
  "provides": [
    {
      "id": "remote-storage-configurations",
      "version": "1.1",
      "handlers": [
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/remote-storage/configurations",
          "permissionsRequired": [
            "remote-storage.configurations.item.post"
          ]
        },
        {
          "methods": [
            "PUT"
          ],
          "pathPattern": "/remote-storage/configurations/{configurationId}",
          "permissionsRequired": [
            "remote-storage.configurations.item.put"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/remote-storage/configurations",
          "permissionsRequired": [
            "remote-storage.configurations.collection.get"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/remote-storage/configurations/{configurationId}",
          "permissionsRequired": [
            "remote-storage.configurations.item.get"
          ]
        },
        {
          "methods": [
            "DELETE"
          ],
          "pathPattern": "/remote-storage/configurations/{configurationId}",
          "permissionsRequired": [
            "remote-storage.configurations.item.delete"
          ]
        }
      ]
    },
    {
      "id": "remote-storage-mappings",
      "version": "1.0",
      "handlers": [
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/remote-storage/mappings",
          "permissionsRequired": [
            "remote-storage.mappings.item.post"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/remote-storage/mappings",
          "permissionsRequired": [
            "remote-storage.mappings.collection.get"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/remote-storage/mappings/{finalLocationId}",
          "permissionsRequired": [
            "remote-storage.mappings.item.get"
          ]
        },
        {
          "methods": [
            "DELETE"
          ],
          "pathPattern": "/remote-storage/mappings/{finalLocationId}",
          "permissionsRequired": [
            "remote-storage.mappings.item.delete"
          ]
        }
      ]
    },
    {
      "id": "remote-storage-extended-mappings",
      "version": "1.0",
      "handlers": [
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/remote-storage/extended-mappings",
          "permissionsRequired": [
            "remote-storage.extended-mappings.item.post"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/remote-storage/extended-mappings",
          "permissionsRequired": [
            "remote-storage.extended-mappings.collection.get"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/remote-storage/extended-mappings/{finalLocationId}",
          "permissionsRequired": [
            "remote-storage.extended-mappings.item.get"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/remote-storage/extended-mappings/locations",
          "permissionsRequired": [
            "remote-storage.extended-mappings-locations.collection.get"
          ],
          "modulePermissions": [
            "inventory-storage.locations.collection.get"
          ]
        },
        {
          "methods": [
            "DELETE"
          ],
          "pathPattern": "/remote-storage/extended-mappings/{finalLocationId}/{originalLocationId}",
          "permissionsRequired": [
            "remote-storage.extended-mappings.item.delete"
          ]
        }
      ]
    },
    {
      "id": "remote-storage-providers",
      "version": "1.0",
      "handlers": [
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/remote-storage/providers",
          "permissionsRequired": [
            "remote-storage.providers.collection.get"
          ]
        }
      ]
    },
    {
      "id": "remote-storage-accessions",
      "version": "1.1",
      "handlers": [
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/remote-storage/accessions",
          "permissionsRequired": [
            "remote-storage.accessions.item.post"
          ],
          "modulePermissions": [
            "inventory.items.collection.get",
            "inventory.items.item.put",
            "inventory.instances.collection.get",
            "inventory.items.move.item.post",
            "inventory-storage.holdings.collection.get",
            "inventory-storage.holdings.item.put",
            "inventory-storage.holdings.item.post",
            "inventory-storage.identifier-types.collection.get",
            "inventory-storage.contributor-types.collection.get",
            "inventory-storage.item-note-types.item.get"
          ]
        },
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/remote-storage/accessions",
          "permissionsRequired": [
            "remote-storage.accessions.collection.get"
          ]
        },
        {
          "methods": [
            "PUT"
          ],
          "pathPattern": "/remote-storage/accessions/id/{accessionId}",
          "permissionsRequired": [
            "remote-storage.accessions.item.put"
          ]
        },
        {
          "methods": [
            "PUT"
          ],
          "pathPattern": "/remote-storage/accessions/barcode/{barcode}",
          "permissionsRequired": [
            "remote-storage.accessions.item.put"
          ]
        }
      ]
    },
    {
      "id": "remote-storage-retrievals",
      "version": "1.1",
      "handlers": [
        {
          "methods": [
            "GET"
          ],
          "pathPattern": "/remote-storage/retrievals",
          "permissionsRequired": [
            "remote-storage.retrievals.collection.get"
          ]
        },
        {
          "methods": [
            "PUT"
          ],
          "pathPattern": "/remote-storage/retrievals/id/{retrievalId}",
          "permissionsRequired": [
            "remote-storage.retrievals.item.put"
          ]
        },
        {
          "methods": [
            "PUT"
          ],
          "pathPattern": "/remote-storage/retrievals/barcode/{barcode}",
          "permissionsRequired": [
            "remote-storage.retrievals.item.put"
          ]
        }
      ]
    },
    {
      "id": "remote-storage-check-in",
      "version": "1.2",
      "handlers": [
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/remote-storage/retrieve/{remoteStorageConfigurationId}/checkInItem",
          "permissionsRequired": [
            "remote-storage.check-in.item.post"
          ],
          "modulePermissions": [
            "inventory-storage.locations.item.get",
            "circulation.check-in-by-barcode.post"
          ]
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/remote-storage/retrieve/{remoteStorageConfigurationId}/checkInItemByHoldId",
          "permissionsRequired": [
            "remote-storage.check-in.item.post"
          ],
          "modulePermissions": [
            "inventory-storage.locations.item.get",
            "circulation.check-in-by-barcode.post"
          ]
        },
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/remote-storage/return/{remoteStorageConfigurationId}",
          "permissionsRequired": [
            "remote-storage.return.item.post"
          ],
          "modulePermissions": [
            "inventory.items.collection.get",
            "circulation.requests.queue.collection.get",
            "inventory-storage.locations.item.get",
            "circulation.check-in-by-barcode.post",
            "inventory-storage.service-points.item.get",
            "users.collection.get"
          ]
        }
      ]
    },
    {
      "id": "remote-storage-event-handlers",
      "version": "1.1",
      "handlers": [
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/remote-storage/pub-sub-handlers/log-record-event",
          "permissionsRequired": [
            "pubsub.events.post"
          ],
          "modulePermissions": [
            "inventory.items.collection.get",
            "users.collection.get",
            "inventory-storage.service-points.item.get",
            "circulation.requests.queue.collection.get"
          ]
        }
      ]
    },
    {
      "id": "remote-storage-items",
      "version": "1.0",
      "handlers": [
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/remote-storage/items/barcode/{barcode}/markAsMissing",
          "permissionsRequired": [
            "remote-storage.items.item.mark-as-missing.post"
          ],
          "modulePermissions": [
            "inventory.items.collection.get",
            "inventory.items.item.mark-missing.post",
            "inventory-storage.items.item.get"
          ]
        }
      ]
    },
    {
      "id": "_tenant",
      "version": "2.0",
      "interfaceType": "system",
      "handlers": [
        {
          "methods": [
            "POST"
          ],
          "pathPattern": "/_/tenant",
          "modulePermissions": [
            "users.collection.get",
            "users.item.post",
            "users.item.put",
            "login.item.post",
            "login.item.delete",
            "perms.users.get",
            "perms.users.item.post",
            "perms.users.assign.immutable",
            "perms.users.assign.mutable",
            "pubsub.event-types.post",
            "pubsub.subscribers.post",
            "pubsub.publishers.post"
          ]
        },
        {
          "methods": [
            "GET",
            "DELETE"
          ],
          "pathPattern": "/_/tenant/{id}"
        }
      ]
    }
  ],
  "permissionSets": [
    {
      "permissionName": "remote-storage.configurations.item.post",
      "displayName": "create a remote storage configuration",
      "description": "Add a remote storage configuration"
    },
    {
      "permissionName": "remote-storage.configurations.item.put",
      "displayName": "modify a remote storage configuration",
      "description": "Modify a remote storage configuration"
    },
    {
      "permissionName": "remote-storage.configurations.collection.get",
      "displayName": "get remote storage configurations collection",
      "description": "Get a list of remote storage configurations"
    },
    {
      "permissionName": "remote-storage.configurations.item.get",
      "displayName": "get remote storage configuration",
      "description": "Get a remote storage configuration by id"
    },
    {
      "permissionName": "remote-storage.configurations.item.delete",
      "displayName": "delete a remote storage configuration",
      "description": "Delete a remote storage configuration by id"
    },
    {
      "permissionName": "remote-storage.mappings.item.post",
      "displayName": "create/update location mapping",
      "description": "Create new or update existing location mapping"
    },
    {
      "permissionName": "remote-storage.mappings.collection.get",
      "displayName": "get location mappings collection",
      "description": "Get list of location mappings"
    },
    {
      "permissionName": "remote-storage.mappings.item.get",
      "displayName": "get location mapping by Folio location id",
      "description": "Get location mapping by Folio location id"
    },
    {
      "permissionName": "remote-storage.mappings.item.delete",
      "displayName": "Delete location mapping",
      "description": "Delete a location mapping by id"
    },
    {
      "permissionName": "remote-storage.extended-mappings.item.post",
      "displayName": "create/update extended location mapping",
      "description": "Create new or update existing extended location mapping"
    },
    {
      "permissionName": "remote-storage.extended-mappings.collection.get",
      "displayName": "get extended location mappings collection",
      "description": "Get list of extended location mappings"
    },
    {
      "permissionName": "remote-storage.extended-mappings.item.get",
      "displayName": "get extended location mapping by Folio location id",
      "description": "Get extended location mapping by Folio location id"
    },
    {
      "permissionName": "remote-storage.extended-mappings-locations.collection.get",
      "displayName": "get extended location mapping by Folio location id",
      "description": "Get extended location mapping by Folio location id"
    },
    {
      "permissionName": "remote-storage.extended-mappings.item.delete",
      "displayName": "Delete extended location mapping",
      "description": "Delete extended location mapping by id"
    },
    {
      "permissionName": "remote-storage.providers.collection.get",
      "displayName": "get remote storage providers collection",
      "description": "Get list of remote storage providers"
    },
    {
      "permissionName": "remote-storage.accessions.item.post",
      "displayName": "post remote storage accession item",
      "description": "Perform item accession initiated by remote storage"
    },
    {
      "permissionName": "remote-storage.accessions.collection.get",
      "displayName": "get remote storage accession queues collection",
      "description": "Get list of remote storage accession queues"
    },
    {
      "permissionName": "remote-storage.accessions.item.put",
      "displayName": "modify a remote storage accession queue",
      "description": "Modify a remote storage accession queue by changing accessioned date time"
    },
    {
      "permissionName": "remote-storage.retrievals.collection.get",
      "displayName": "get remote storage retrieval queues collection",
      "description": "Get list of remote storage retrieval queue records"
    },
    {
      "permissionName": "remote-storage.retrievals.item.put",
      "displayName": "modify a remote storage retrieval queue record",
      "description": "Modify a remote storage retrieval queue record by changing retrieved date time"
    },
    {
      "permissionName": "remote-storage.check-in.item.post",
      "displayName": "check-in item by barcode",
      "description": "Check-in item by barcode"
    },
    {
      "permissionName": "remote-storage.return.item.post",
      "displayName": "return item by barcode",
      "description": "Return item by barcode"
    },
    {
      "permissionName": "remote-storage.items.item.mark-as-missing.post",
      "displayName": "mark item as missing by barcode",
      "description": "Mark item as missing by barcode"
    },
    {
      "permissionName": "remote-storage.all",
      "displayName": "remote storage API module - all permissions",
      "description": "All permissions for remote storage",
      "subPermissions": [
        "remote-storage.configurations.item.post",
        "remote-storage.configurations.item.put",
        "remote-storage.configurations.collection.get",
        "remote-storage.configurations.item.get",
        "remote-storage.configurations.item.delete",
        "remote-storage.mappings.item.post",
        "remote-storage.mappings.collection.get",
        "remote-storage.mappings.item.get",
        "remote-storage.mappings.item.delete",
        "remote-storage.extended-mappings.item.post",
        "remote-storage.extended-mappings.collection.get",
        "remote-storage.extended-mappings.item.get",
        "remote-storage.extended-mappings-locations.collection.get",
        "remote-storage.extended-mappings.item.delete",
        "remote-storage.providers.collection.get",
        "remote-storage.accessions.item.post",
        "remote-storage.accessions.collection.get",
        "remote-storage.accessions.item.put",
        "remote-storage.retrievals.collection.get",
        "remote-storage.retrievals.item.put",
        "remote-storage.check-in.item.post",
        "remote-storage.return.item.post",
        "remote-storage.items.item.mark-as-missing.post"
      ]
    }
  ],
  "launchDescriptor": {
    "dockerImage": "folioorg/mod-remote-storage:3.1.0",
    "dockerPull": true,
    "env": [
      {
        "name": "JAVA_OPTIONS",
        "value": "-XX:MaxRAMPercentage=75.0"
      },
      {
        "name": "DB_HOST",
        "value": "postgres"
      },
      {
        "name": "DB_PORT",
        "value": "5432"
      },
      {
        "name": "KAFKA_HOST",
        "value": "kafka"
      },
      {
        "name": "KAFKA_PORT",
        "value": "9092"
      },
      {
        "name": "KAFKA_SECURITY_PROTOCOL",
        "value": "PLAINTEXT"
      },
      {
        "name": "KAFKA_SSL_KEYSTORE_LOCATION",
        "value": ""
      },
      {
        "name": "KAFKA_SSL_KEYSTORE_PASSWORD",
        "value": ""
      },
      {
        "name": "KAFKA_SSL_TRUSTSTORE_LOCATION",
        "value": ""
      },
      {
        "name": "KAFKA_SSL_TRUSTSTORE_PASSWORD",
        "value": ""
      },
      {
        "name": "DB_USERNAME",
        "value": "folio_admin"
      },
      {
        "name": "DB_PASSWORD",
        "value": "folio_admin"
      },
      {
        "name": "DB_DATABASE",
        "value": "okapi_modules"
      },
      {
        "name": "DB_QUERYTIMEOUT",
        "value": "60000"
      },
      {
        "name": "DB_CHARSET",
        "value": "UTF-8"
      },
      {
        "name": "DB_MAXPOOLSIZE",
        "value": "5"
      }
    ],
    "dockerArgs": {
      "HostConfig": {
        "Memory": 712673984,
        "PortBindings": {
          "8081/tcp": [
            {
              "HostPort": "%p"
            }
          ]
        }
      }
    }
  },
  "user": {
    "type": "module",
    "permissions": [
      "users.collection.get",
      "users.item.get",
      "inventory.instances.collection.get",
      "inventory-storage.contributor-types.collection.get",
      "inventory-storage.holdings.collection.get",
      "inventory-storage.items.collection.get",
      "inventory-storage.identifier-types.collection.get",
      "inventory-storage.item-note-types.item.get"
    ]
  }
}